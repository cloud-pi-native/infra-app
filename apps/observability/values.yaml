---
global:
  alert: false
  cluster: ""
  env: ""
  openshift: true
  metrics: "http://mimir.shared.numerique-interieur.com"
  logs: "http://loki.shared.numerique-interieur.com"
  tenantLabel: "tenant_id"
  tenants: []
  kubeStateMetrics: false
  nodeExporter: false
  cadvisor: false

cadvisor:
  tolerations:
    - effect: NoSchedule
      key: k8s.scaleway.com/obs
      operator: "Equal"
      value: "true"
  metrics:
    enabled: true
    relabelings:
    - action: replace
      sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
    - action: replace
      sourceLabels:
      - __metrics_path__
      targetLabel: metrics_path
      replacement: /metrics/cadvisor
    - action: replace
      sourceLabels:
      - job
      targetLabel: job
      replacement: kubelet
    - action: replace
      sourceLabels:
      - __metrics_path__
      targetLabel: metrics_path
    metricRelabelings:
      - action: replace
        sourceLabels:
        - container_label_io_kubernetes_pod_name
        targetLabel: pod
      - action: replace
        sourceLabels:
        - container_label_io_kubernetes_container_name
        targetLabel: container
      - action: replace
        sourceLabels:
        - container_label_io_kubernetes_pod_namespace
        targetLabel: namespace
      - action: labeldrop
        regex: container_label_io_kubernetes_pod_name
      - action: labeldrop
        regex: container_label_io_kubernetes_container_name
      - action: labeldrop
        regex: container_label_io_kubernetes_pod_namespace
      - action: labeldrop
        regex: (name|id|service)
      # Drop less useful container CPU metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)'
      # Drop less useful container / always zero filesystem metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)'
      # Drop less useful / always zero container memory metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_memory_(mapped_file|swap)'
      # Drop less useful container process metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_(file_descriptors|tasks_state|threads_max)'
      # Drop container_memory_failures_total{scope="hierarchy"} metrics,
      # we only need the container scope.
      - sourceLabels: [__name__, scope]
        action: drop
        regex: 'container_memory_failures_total;hierarchy'
      # Drop container_network_... metrics that match various interfaces that
      # correspond to CNI and similar interfaces. This avoids capturing network
      # metrics for host network containers.
      - sourceLabels: [__name__, interface]
        action: drop
        regex: 'container_network_.*;(cali|cilium|cni|lxc|nodelocaldns|tunl).*'
      # Drop container spec metrics that overlap with kube-state-metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_spec.*'
      # Drop cgroup metrics with no pod.
      - sourceLabels: [id, pod]
        action: drop
        regex: '.+;'
    # - sourceLabels: [__name__, image]
    #   separator: ;
    #   regex: container_([a-z_]+);
    #   replacement: $1
    #   action: drop
    # - sourceLabels: [__name__]
    #   separator: ;
    #   regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
    #   replacement: $1
    #   action: drop

  podSecurityContext:
    create: true
    privileged: true
  container:
    additionalArgs:
      - --housekeeping_interval=10s                       # kubernetes default args
      - --max_housekeeping_interval=15s
      - --event_storage_event_limit=default=0
      - --event_storage_age_limit=default=0
      - --enable_metrics=app,cpu,disk,diskIO,memory,network,process    # enable only diskIO, cpu, memory, network, disk
      - --docker_only
      - --store_container_labels=false
      - --whitelisted_container_labels=io.kubernetes.container.name,io.kubernetes.pod.name,io.kubernetes.pod.namespace

kube-state-metrics: 
  prometheus:
    monitor:
      enabled: true
      http:
        honorLabels: true

prometheus-node-exporter:
  prometheus:
    monitor:
      enabled: true

tenants: []
metrics:
  fullnameOverride: observability-metrics
  crds:
    create: false
  alloy:
    securityContext:
      privileged: true
      runAsUser: 0
    clustering:
      enabled: true
    configMap:
      create: false
      name: alloy-metrics-config
      key: config.alloy
      varlog: true
  serviceMonitor:
    enabled: true
  controller:
    type: "statefulset"
    replicas: "3"
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/infra
        value: reserved
      - effect: NoExecute
        key: node-role.kubernetes.io/infra
        value: reserved

logs:
  fullnameOverride: observability-logs
  crds:
    create: false
  alloy:
    securityContext:
      privileged: true
      runAsUser: 0
    configMap:
      create: false
      name: alloy-logs-config
      key: config.alloy
    mounts:
      varlog: true
  serviceMonitor:
    enabled: true
  controller:
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/infra
        value: reserved
      - effect: NoExecute
        key: node-role.kubernetes.io/infra
        value: reserved
      - effect: NoSchedule
        key: node-role.kubernetes.io/controlplane
      - effect: NoSchedule
        key: node-role.kubernetes.io/master

prometheus-operator-crds: 
  enabled: false

scc_create: true